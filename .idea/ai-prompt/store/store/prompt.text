here is an example of store.ts
```
import { create } from 'zustand'
import { IUsers_1_000___ } from '../../../../src/app/dashboard/template-demo/all/api/v1/model'
import { Users_1_000___Store } from '../../../../src/app/dashboard/template-demo/all/store/StoreTypes'
import {
    baseIUsers_1_000___,
    queryParams,
} from '../../../../src/app/dashboard/template-demo/all/store/StoreConstants'

export const useUsers_1_000___Store = create<Users_1_000___Store>((set) => ({
    queryPramsLimit: queryParams.limit,
    queryPramsPage: queryParams.page,
    queryPramsQ: queryParams.q,
    users_2_000___: [],
    selectedUsers_1_000___: null,
    newUsers_1_000___: baseIUsers_1_000___,
    isBulkEditModalOpen: false,
    isBulkDynamicUpdateModal: false,
    isBulkUpdateModalOpen: false,
    isBulkDeleteModalOpen: false,
    isAddModalOpen: false,
    isViewModalOpen: false,
    isEditModalOpen: false,
    isDeleteModalOpen: false,
    bulkData: [],
    setQueryPramsLimit: (payload: number) => set({ queryPramsLimit: payload }),
    setQueryPramsPage: (payload: number) => set({ queryPramsPage: payload }),
    setQueryPramsQ: (payload: string) => set({ queryPramsQ: payload }),
    setBulkData: (bulkData: IUsers_1_000___[]) => set({ bulkData }),
    setUsers_1_000___: (users_2_000___: IUsers_1_000___[]) =>
        set({ users_2_000___ }),
    setSelectedUsers_1_000___: (Users_1_000___) =>
        set({ selectedUsers_1_000___: Users_1_000___ }),
    setNewUsers_1_000___: (Users_1_000___) =>
        set((state) => ({
            newUsers_1_000___:
                typeof Users_1_000___ === 'function'
                    ? Users_1_000___(state.newUsers_1_000___)
                    : Users_1_000___,
        })),
    toggleAddModal: (data) => set({ isAddModalOpen: data }),
    toggleViewModal: (data) => set({ isViewModalOpen: data }),
    toggleEditModal: (data) => set({ isEditModalOpen: data }),
    toggleDeleteModal: (data) => set({ isDeleteModalOpen: data }),
    toggleBulkEditModal: (data) => set({ isBulkEditModalOpen: data }),
    toggleBulkUpdateModal: (data) => set({ isBulkUpdateModalOpen: data }),
    toggleBulkDynamicUpdateModal: (data) =>
        set({ isBulkDynamicUpdateModal: data }),
    toggleBulkDeleteModal: (data) => set({ isBulkDeleteModalOpen: data }),
}))

```

here is an example of a json file named inputJsonFile 
```
{
  "uid": "000",
  "templateName": "Basic Template",
  "schema": {
    "title": "STRING",
    "email": "EMAIL", 
    "password": "PASSWORD",
    "passcode": "PASSCODE",
    "area": "SELECT",
    "books-list": "MULTISELECT",
    "check-list": "MULTIDYNAMICSELECT",
    "sub-area": "DYNAMICSELECT",
    "products-images": "IMAGES",
    "personal-image": "IMAGE",
    "description": "DESCRIPTION",
    "age": "INTNUMBER",
    "amount": "FLOATNUMBER",
    "isActive": "BOOLEAN",
    "start-date": "DATE",
    "start-time": "TIME",
    "schedule-date": "DATERANGE",
    "schedule-time": "TIMERANGE",
    "favorite-color": "COLORPICKER",
    "number": "PHONE",
    "profile": "URL",
    "test": "RICHTEXT",
    "info": "AUTOCOMPLETE",
    "shift": "RADIOBUTTON",
    "policy": "CHECKBOX",
    "hobbys": "MULTICHECKBOX"
  },
  "namingConvention": {
    "Users_1_000___": "Posts",
    "users_2_000___": "posts",
    "User_3_000___": "Post",
    "user_4_000___": "post",
    "ISelect_6_000___": "ISelect",
    "select_5_000___": "select"
  }
}
```

here is example of out put store.ts 
```
import { create } from 'zustand'
import { IPosts } from '../../../../src/app/dashboard/template-demo/all/api/v1/model'
import { PostsStore } from '../../../../src/app/dashboard/template-demo/all/store/StoreTypes'
import {
    baseIPosts,
    queryParams,
} from '../../../../src/app/dashboard/template-demo/all/store/StoreConstants'

export const usePostsStore = create<PostsStore>((set) => ({
    queryPramsLimit: queryParams.limit,
    queryPramsPage: queryParams.page,
    queryPramsQ: queryParams.q,
    posts: [],
    selectedPosts: null,
    newPosts: baseIPosts,
    isBulkEditModalOpen: false,
    isBulkDynamicUpdateModal: false,
    isBulkUpdateModalOpen: false,
    isBulkDeleteModalOpen: false,
    isAddModalOpen: false,
    isViewModalOpen: false,
    isEditModalOpen: false,
    isDeleteModalOpen: false,
    bulkData: [],
    setQueryPramsLimit: (payload: number) => set({ queryPramsLimit: payload }),
    setQueryPramsPage: (payload: number) => set({ queryPramsPage: payload }),
    setQueryPramsQ: (payload: string) => set({ queryPramsQ: payload }),
    setBulkData: (bulkData: IPosts[]) => set({ bulkData }),
    setPosts: (posts: IPosts[]) => set({ posts }),
    setSelectedPosts: (Posts) => set({ selectedPosts: Posts }),
    setNewPosts: (Posts) =>
        set((state) => ({
            newPosts:
                typeof Posts === 'function' ? Posts(state.newPosts) : Posts,
        })),
    toggleAddModal: (data) => set({ isAddModalOpen: data }),
    toggleViewModal: (data) => set({ isViewModalOpen: data }),
    toggleEditModal: (data) => set({ isEditModalOpen: data }),
    toggleDeleteModal: (data) => set({ isDeleteModalOpen: data }),
    toggleBulkEditModal: (data) => set({ isBulkEditModalOpen: data }),
    toggleBulkUpdateModal: (data) => set({ isBulkUpdateModalOpen: data }),
    toggleBulkDynamicUpdateModal: (data) =>
        set({ isBulkDynamicUpdateModal: data }),
    toggleBulkDeleteModal: (data) => set({ isBulkDeleteModalOpen: data }),
}))

```

Now write a function it return the whole store.ts file in string.

and remember the following 

    1. some times json could looklike this one 
```
{
    "uid": "000",
    "templateName": "Basic Template",
    "schema": {
        "title1": "STRING",
        "title2": "STRING",
        "manager-md1": {
            "title1": "STRING",
            "title2": "STRING",
            "chief-executive-officer-ceo1": {
                "title1": "STRING",
                "title2": "STRING",
                "executive-officer-eo1": {
                    "title1": "STRING",
                    "title2": "STRING",
                    "worker1": {
                        "title1": "STRING",
                        "title2": "STRING",
                        "loworker1": {
                            "title1": "STRING",
                            "title2": "STRING"
                        },
                        "loworker2": {
                            "title1": "STRING",
                            "title2": "STRING"
                        }
                    },
                    "worker2": {
                        "title1": "STRING",
                        "title2": "STRING",
                        "loworker1": {
                            "title1": "STRING",
                            "title2": "STRING"
                        },
                        "loworker2": {
                            "title1": "STRING",
                            "title2": "STRING"
                        }
                    }
                },
                "executive-officer-eo2": {
                    "title1": "STRING",
                    "title2": "STRING",
                    "worker1": {
                        "title1": "STRING",
                        "title2": "STRING",
                        "loworker1": {
                            "title1": "STRING",
                            "title2": "STRING"
                        },
                        "loworker2": {
                            "title1": "STRING",
                            "title2": "STRING"
                        }
                    },
                    "worker2": {
                        "title1": "STRING",
                        "title2": "STRING",
                        "loworker1": {
                            "title1": "STRING",
                            "title2": "STRING"
                        },
                        "loworker2": {
                            "title1": "STRING",
                            "title2": "STRING"
                        }
                    }
                }
            },
            "chief-executive-officer-ceo2": {
                "title1": "STRING",
                "title2": "STRING",
                "executive-officer-eo1": {
                    "title1": "STRING",
                    "title2": "STRING",
                    "worker1": {
                        "title1": "STRING",
                        "title2": "STRING",
                        "loworker1": {
                            "title1": "STRING",
                            "title2": "STRING"
                        },
                        "loworker2": {
                            "title1": "STRING",
                            "title2": "STRING"
                        }
                    },
                    "worker2": {
                        "title1": "STRING",
                        "title2": "STRING",
                        "loworker1": {
                            "title1": "STRING",
                            "title2": "STRING"
                        },
                        "loworker2": {
                            "title1": "STRING",
                            "title2": "STRING"
                        }
                    }
                },
                "executive-officer-eo2": {
                    "title1": "STRING",
                    "title2": "STRING",
                    "worker1": {
                        "title1": "STRING",
                        "title2": "STRING",
                        "loworker1": {
                            "title1": "STRING",
                            "title2": "STRING"
                        },
                        "loworker2": {
                            "title1": "STRING",
                            "title2": "STRING"
                        }
                    },
                    "worker2": {
                        "title1": "STRING",
                        "title2": "STRING",
                        "loworker1": {
                            "title1": "STRING",
                            "title2": "STRING"
                        },
                        "loworker2": {
                            "title1": "STRING",
                            "title2": "STRING"
                        }
                    }
                }
            }
        },
        "manager-md2": {
            "title1": "STRING",
            "title2": "STRING",
            "chief-executive-officer-ceo1": {
                "title1": "STRING",
                "title2": "STRING",
                "executive-officer-eo1": {
                    "title1": "STRING",
                    "title2": "STRING",
                    "worker1": {
                        "title1": "STRING",
                        "title2": "STRING",
                        "loworker1": {
                            "title1": "STRING",
                            "title2": "STRING"
                        },
                        "loworker2": {
                            "title1": "STRING",
                            "title2": "STRING"
                        }
                    },
                    "worker2": {
                        "title1": "STRING",
                        "title2": "STRING",
                        "loworker1": {
                            "title1": "STRING",
                            "title2": "STRING"
                        },
                        "loworker2": {
                            "title1": "STRING",
                            "title2": "STRING"
                        }
                    }
                },
                "executive-officer-eo2": {
                    "title1": "STRING",
                    "title2": "STRING",
                    "worker1": {
                        "title1": "STRING",
                        "title2": "STRING",
                        "loworker1": {
                            "title1": "STRING",
                            "title2": "STRING"
                        },
                        "loworker2": {
                            "title1": "STRING",
                            "title2": "STRING"
                        }
                    },
                    "worker2": {
                        "title1": "STRING",
                        "title2": "STRING",
                        "loworker1": {
                            "title1": "STRING",
                            "title2": "STRING"
                        },
                        "loworker2": {
                            "title1": "STRING",
                            "title2": "STRING"
                        }
                    }
                }
            },
            "chief-executive-officer-ceo2": {
                "title1": "STRING",
                "title2": "STRING",
                "executive-officer-eo1": {
                    "title1": "STRING",
                    "title2": "STRING",
                    "worker1": {
                        "title1": "STRING",
                        "title2": "STRING",
                        "loworker1": {
                            "title1": "STRING",
                            "title2": "STRING"
                        },
                        "loworker2": {
                            "title1": "STRING",
                            "title2": "STRING"
                        }
                    },
                    "worker2": {
                        "title1": "STRING",
                        "title2": "STRING",
                        "loworker1": {
                            "title1": "STRING",
                            "title2": "STRING"
                        },
                        "loworker2": {
                            "title1": "STRING",
                            "title2": "STRING"
                        }
                    }
                },
                "executive-officer-eo2": {
                    "title1": "STRING",
                    "title2": "STRING",
                    "worker1": {
                        "title1": "STRING",
                        "title2": "STRING",
                        "loworker1": {
                            "title1": "STRING",
                            "title2": "STRING"
                        },
                        "loworker2": {
                            "title1": "STRING",
                            "title2": "STRING"
                        }
                    },
                    "worker2": {
                        "title1": "STRING",
                        "title2": "STRING",
                        "loworker1": {
                            "title1": "STRING",
                            "title2": "STRING"
                        },
                        "loworker2": {
                            "title1": "STRING",
                            "title2": "STRING"
                        }
                    }
                }
            }
        }
    },
    "namingConvention": {
        "Users_1_000___": "Posts",
        "users_2_000___": "posts",
        "User_3_000___": "Post",
        "user_4_000___": "post",
        "ISelect_6_000___": "ISelect",
        "select_5_000___": "select"
    }
}
```
    2. here is mongoose schema model 
    ```

const mySchema = new Schema({
  STRING: {
    type: String,
    required: true,
    trim: true
  },
  EMAIL: {
    type: String,
    required: true,
    unique: true,
    trim: true,
    lowercase: true,
    match: [/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/, 'Please fill a valid email address']
  },
  PASSWORD: {
    type: String,
    required: true,
    select: false // Hides this field from query results by default for security
  },
  PASSCODE: {
    type: String,
    required: true,
    select: false
  },
  SELECT: {
    type: String,
    required: true,
    enum: ['Option 1', 'Option 2', 'Option 3'] // Example options
  },
  DYNAMICSELECT: {
    type: Schema.Types.ObjectId,
    ref: 'AnotherModel' // Example of a dynamic reference to another model
  },
  IMAGES: [{
    type: String // Array of URLs to images
  }],
  IMAGE: {
    type: String // URL to a single image
  },
  DESCRIPTION: {
    type: String,
    trim: true
  },
  INTNUMBER: {
    type: Number,
    validate: {
      validator: Number.isInteger,
      message: '{VALUE} is not an integer value'
    }
  },
  FLOATNUMBER: {
    type: Number
  },
  BOOLEAN: {
    type: Boolean,
    default: false
  },
  DATE: {
    type: Date,
    default: Date.now
  },
  TIME: {
    type: String // Can be stored as a string in 'HH:MM:SS' format
  },
  DATERANGE: {
    start: { type: Date },
    end: { type: Date }
  },
  TIMERANGE: {
    start: { type: String }, // 'HH:MM:SS'
    end: { type: String }   // 'HH:MM:SS'
  },
  COLORPICKER: {
    type: String,
    match: [/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/, 'Please fill a valid color hex code']
  },
  PHONE: {
    type: String,
    validate: {
      validator: function(v) {
        return /\d{3}-\d{3}-\d{4}/.test(v);
      },
      message: props => `${props.value} is not a valid phone number!`
    }
  },
  URL: {
    type: String,
    trim: true
  },
  RICHTEXT: {
    type: String
  },
  AUTOCOMPLETE: {
    type: String
  },
  RADIOBUTTON: {
    type: String,
    enum: ['Choice A', 'Choice B', 'Choice C'] // Example choices
  },
  CHECKBOX: {
    type: Boolean,
    default: false
  },
  MULTICHECKBOX: [{
    type: String // An array of strings representing the selected options
  }]
}, {
  timestamps: true // Automatically adds createdAt and updatedAt fields. [8, 15]
});

    ```
    3. json key is changable or dynamic. for example {"name":"STRING", "book-name":"STRING", "note":"STRING" }
    4. please generate the file in typescript